---
# Source: CUE apiObjects.ConfigMap.jwt-key-writer
metadata:
  name: jwt-key-writer
  namespace: bank-security
data:
  entrypoint: |-
    #! /bin/bash
    #

    tmpdir="$(mktemp -d)"
    finish() {
      status=$?
      rm -rf "${tmpdir}"
      return $status
    }
    trap finish EXIT

    set -euo pipefail

    cd "$tmpdir"
    mkdir jwt-key
    cd jwt-key
    echo "generating private key" >&2
    ssh-keygen -t rsa -b 4096 -m PEM -f jwtRS256.key -q -N "" -C bank-of-holos
    echo "generating public key" >&2
    ssh-keygen -e -m PKCS8 -f jwtRS256.key > jwtRS256.key.pub
    cd ..

    echo "copying keys into manifest secret.yaml" >&2
    kubectl create secret generic jwt-key --from-file=jwt-key --dry-run=client -o yaml > secret.yaml

    echo "applying secret" >&2
    kubectl apply --server-side=true -f secret.yaml

    echo "cleaning up" >&2
    rm -rf jwt-key
    rm -f secret.yaml

    echo "ok done" >&2
kind: ConfigMap
apiVersion: v1
---
# Source: CUE apiObjects.Job.jwt-key-writer
metadata:
  name: jwt-key-writer
  namespace: bank-security
spec:
  template:
    spec:
      volumes:
        - name: config
          configMap:
            name: jwt-key-writer
      containers:
        - name: toolkit
          image: quay.io/holos-run/toolkit:2024-09-16
          securityContext:
            capabilities:
              drop:
                - ALL
            allowPrivilegeEscalation: false
          command:
            - /bin/bash
          args:
            - /config/entrypoint
          env:
            - name: HOME
              value: /tmp
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
      restartPolicy: OnFailure
      serviceAccountName: jwt-key-writer
      securityContext:
        runAsUser: 8192
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
kind: Job
apiVersion: batch/v1
---
# Source: CUE apiObjects.Role.jwt-key-reader
metadata:
  name: jwt-key-reader
  namespace: bank-security
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    resourceNames:
      - jwt-key
    verbs:
      - get
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
---
# Source: CUE apiObjects.Role.jwt-key-writer
metadata:
  name: jwt-key-writer
  namespace: bank-security
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - update
      - patch
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
---
# Source: CUE apiObjects.RoleBinding.jwt-key-reader
metadata:
  name: jwt-key-reader
  namespace: bank-security
subjects:
  - kind: ServiceAccount
    name: bank-of-holos
    namespace: bank-frontend
  - kind: ServiceAccount
    name: bank-of-holos
    namespace: bank-backend
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jwt-key-reader
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
---
# Source: CUE apiObjects.RoleBinding.jwt-key-writer
metadata:
  name: jwt-key-writer
  namespace: bank-security
subjects:
  - kind: ServiceAccount
    name: jwt-key-writer
    namespace: bank-security
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jwt-key-writer
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
---
# Source: CUE apiObjects.ServiceAccount.jwt-key-writer
metadata:
  name: jwt-key-writer
  namespace: bank-security
kind: ServiceAccount
apiVersion: v1
